generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  VIEWER
  EDITOR
}
model User {
  id            Int            @id @default(autoincrement())
  name          String
  username      String         @unique
  password      String
  email         String         @unique
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt @map("updated_at")
  collaborators Collaborator[]
  itinerary     Itinerary[]
  activities    Activity[]
  notifications Notifaction[]

  @@map("users")
}

model Itinerary {
  id            Int            @id @default(autoincrement())
  title         String
  description   String
  startDate     DateTime
  endDate       DateTime
  createdById   Int            @map("created_by_id")
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt @map("updated_at")
  activities    Activity[]
  collaborators Collaborator[]
  createdBy     User?          @relation(fields: [createdById], references: [id])
  notifactions  Notifaction[]

  @@map("itineraries")
}

model Collaborator {
  id          Int       @id @default(autoincrement())
  userId      Int       @map("user_id")
  itineraryId Int       @map("itinerary_id")
  role        Role      @default(VIEWER)
  itinerary   Itinerary @relation(fields: [itineraryId], references: [id])
  user        User      @relation(fields: [userId], references: [id])

  @@map("collaborators")
}

model Activity {
  id           Int       @id @default(autoincrement())
  activityName String    @map("activity_name")
  startTime    DateTime  @map("start_time")
  endTime      DateTime  @map("end_time")
  locationName String    @map("location_name")
  address      String    @map("address")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  itineraryId  Int       @map("itinerary_id")
  createdById  Int       @map("created_by_id")
  itinerary    Itinerary @relation(fields: [itineraryId], references: [id])
  createdBy    User     @relation(fields: [createdById], references: [id])

  @@map("activities")
}

model Notifaction {
  id          Int       @id @default(autoincrement())
  userId      Int       @map("user_id")
  itineraryId Int       @map("itinerary_id")
  message     String
  isRead      Boolean   @default(false) @map("is_read")
  createdAt   DateTime  @default(now()) @map("created_at")
  itinerary   Itinerary @relation(fields: [itineraryId], references: [id])
  user        User      @relation(fields: [userId], references: [id])

  @@map("notifaction")
}
